@using SatRadioProxy.SiriusXM
@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=0" />
    <title>SatRadioProxy</title>
    <style type="text/css">
        body {
            background-color: black;
            color: white;
            font-family: sans-serif;
            font-size: 16pt;
            margin: 0;
            text-align: center;
        }

        main {
            display: block;
            margin: auto;
            max-width: 320px;
        }

        #num {
            font-size: 32pt;
        }

        audio {
            visibility: hidden;
            width: 100%;
        }

        a {
            color: inherit;
        }

        table {
            flex: 1 1 auto;
            table-layout: fixed;
            width: 100%;
        }

            table button {
                appearance: none;
                background-color: steelblue;
                border: 0;
                color: white;
                cursor: pointer;
                font-size: 24pt;
                height: 64px;
                padding: 0;
                width: 100%;
            }
    </style>
</head>
<body>
    <main>
        <table>
            <tr>
                <td><button id="button1">1</button></td>
                <td><button id="button2">2</button></td>
                <td><button id="button3">3</button></td>
            </tr>
            <tr>
                <td><button id="button4">4</button></td>
                <td><button id="button5">5</button></td>
                <td><button id="button6">6</button></td>
            </tr>
            <tr>
                <td><button id="button7">7</button></td>
                <td><button id="button8">8</button></td>
                <td><button id="button9">9</button></td>
            </tr>
            <tr>
                <td><button id="clear">⌫</button></td>
                <td><button id="button0">0</button></td>
                <td><button id="play">&#9654;</button></td>
            </tr>
        </table>
        <div>
            &nbsp;
            <span id="num"></span>
            &nbsp;
        </div>
        <audio controls></audio>
        <table>
            <tr>
                <td><button id="back">&larr;&#x2605;</button></td>
                <td><button id="stop">&#9724;</button></td>
                <td><button id="next">&#x2605;&rarr;</button></td>
            </tr>
        </table>
        <hr />
        <div>
            <a asp-action="Channels">
                View channels
            </a>
        </div>
        <hr />
        <div>
            <a href="http://@(NetworkInterfaceProvider.address):9000">
                Lyrion Music Server
            </a>
        </div>
    </main>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/hls.js/1.5.18/hls.min.js"
            integrity="sha512-hARxLWym80kd0Bzl5/93OuW1ujaKfvmJ90yTKak/RB67JuNIjtErU2H7H3bteyfzMuqiSK0tXarT7eK6lEWBBA=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
    @{
        var bookmarks = BookmarkManager.getBookmarks();
        var bookmarkNumbers = SiriusXMChannelCache.channels
            .Where(c => bookmarks.Contains(c.channelId) || bookmarks.IsEmpty)
            .Select(c => c.siriusChannelNumber);
    }
    <script type="text/javascript">
        var bookmarkNumbers = [@Html.Raw(Json.Serialize(bookmarkNumbers))][0];
        var number = 0;

        if ("wiiu" in window) {
            document.getElementById("clear").innerHTML = [@Html.Raw(Json.Serialize((char)0xE072))][0];
            document.getElementById("stop").innerHTML = [@Html.Raw(Json.Serialize((char)0xE098))][0];
        }

        function backspace() {
            const span = document.getElementById("num");
            const str = span.innerText;
            if (str) {
                span.innerText = str.substring(0, str.length - 1);
            }
        }

        function enter() {
            var span = document.getElementById("num");
            var num = +span.innerText || null;

            if (num)
                playNumber(num);
            else
                play(null);

            span.innerText = "";
        }

        document.body.addEventListener("keydown", function (e) {
            if (e.key === "Backspace") {
                e.preventDefault();
                backspace();
            }
        });

        document.body.addEventListener("keypress", function (e) {
            if ("0123456789".indexOf(e.key) !== -1) {
                e.preventDefault();
                document.getElementById("num").innerText += e.key;
            } else if (e.key === "Enter") {
                e.preventDefault();
                enter();
            }
        });

        for (var i = 0; i <= 9; i++) {
            const button = document.getElementById("button" + i);
            var handler = function (e) {
                e.preventDefault();
                document.getElementById("num").innerText += e.target.innerText;
            };
            button.addEventListener("click", handler);
            button.addEventListener("touchstart", handler);
        }

        document.getElementById("clear").addEventListener("click", function (e) {
            e.preventDefault();
            backspace();
        });

        document.getElementById("play").addEventListener("click", function (e) {
            e.preventDefault();
            enter();
        });

        document.getElementById("stop").addEventListener("click", function (e) {
            e.preventDefault();
            play(null);
        });

        function back() {
            for (var i = bookmarkNumbers.length - 1; i >= 0; i--) {
                if (bookmarkNumbers[i] < number) {
                    playNumber(bookmarkNumbers[i]);
                    return;
                }
            }

            playNumber(bookmarkNumbers[bookmarkNumbers.length - 1]);
        }

        document.getElementById("back").addEventListener("click", function (e) {
            e.preventDefault();
            back();
        });

        function next() {
            for (var i = 0; i < bookmarkNumbers.length; i++) {
                if (bookmarkNumbers[i] > number) {
                    playNumber(bookmarkNumbers[i]);
                    return;
                }
            }

            playNumber(bookmarkNumbers[0]);
        }

        document.getElementById("next").addEventListener("click", function (e) {
            e.preventDefault();
            next();
        });

        function playNumber(num) {
            number = +num;
            play("/Home/PlayChannel?num=" + encodeURIComponent(num));
        };

        function play(url) {
            if ("wiiu" in window) {
                if (url)
                    location.href = url;
                else
                    wiiu.videoplayer.end();

                return;
            }

            var audio = document.getElementsByTagName("audio")[0];
            audio.style.visibility = "hidden";
            audio.pause();

            if (!url)
                return;

            audio.src = url;
            audio.style.visibility = "visible";
            audio.play();
        };
    </script>

    <script type="text/javascript">
        var hls = null;

        if ("Hls" in window && Hls.isSupported()) {
            play = async (url) => {
                try {
                    var audio = document.getElementsByTagName("audio")[0];
                    audio.pause();

                    audio.style.visibility = "hidden";

                    if (hls)
                        hls.destroy();

                    if (!url)
                        return;

                    audio.pause();

                    hls = new Hls({ startPosition: 0 });

                    hls.on(Hls.Events.ERROR, function (event, data) {
                        console.warn({ event, data });
                    });

                    var pr = new Promise(r => hls.on(Hls.Events.MEDIA_ATTACHED, r));
                    hls.attachMedia(audio);
                    await pr;

                    if (hls) {
                        hls.loadSource(url);

                        await new Promise(r => hls.on(Hls.Events.MANIFEST_PARSED, r));
                    } else {
                        audio.src = url;
                    }

                    audio.style.visibility = "visible";
                    audio.play();
                } catch (e) {
                    console.error(e);
                }
            };
        }
    </script>
</body>
</html>
